name: Run test suite

on:
  push:
  pull_request:

env:
  TSD_FILE_API_DB_NAME: tsd_file_api_db
  TSD_FILE_API_DB_USER: tsd_file_api_user
  TSD_FILE_API_DB_PASS: tsd_file_api_pass

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]

    services:
      postgres:
        image: docker.io/postgres:14
        env:
          POSTGRES_DB: ${{env.TSD_FILE_API_DB_NAME}}
          POSTGRES_USER: ${{env.TSD_FILE_API_DB_USER}}
          POSTGRES_PASSWORD: ${{env.TSD_FILE_API_DB_PASS}}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Check out repository
        uses: actions/checkout@v3
      - name: Set container tag to variable
        run: echo "CONTAINER_TAG=tsd-file-api:${{ github.sha }}-py${{ matrix.python-version }}-r${{ github.run_attempt }}" >> $GITHUB_ENV
      - name: Build test container image
        run: docker build --tag "${{ env.CONTAINER_TAG }}" --build-arg PYTHON_VERSION="${{ matrix.python-version }}"  -f "./containers/test/Dockerfile" .
      - name: Run all tsd-file-api tests (SQLite)
        run: docker run --rm -v $PWD:/file-api:ro "${{ env.CONTAINER_TAG }}" /bin/sh -c "tsd-file-api & sleep 2 && python tsdfileapi/test_file_api.py"
      - name: Run all tsd-file-api tests (PostgreSQL)
        run: docker run --rm -v $PWD:/file-api:ro "${{ env.CONTAINER_TAG }}" /bin/sh -c "tsd-file-api tsdfileapi/config/config-test-container-postgres.yaml & sleep 2 && python tsdfileapi/test_file_api.py"
